name: Protect branches

on:
  push:
    branches: [ main-clean ]
  workflow_dispatch:

permissions:
  contents: read
  administration: write
  pull-requests: write

jobs:
  enforce:
    runs-on: ubuntu-latest
    steps:
      - name: Set headers
        run: |
          echo "HDR=Accept: application/vnd.github+json" >> $GITHUB_ENV
          echo "APIV=X-GitHub-Api-Version: 2022-11-28"   >> $GITHUB_ENV
          echo "OWNER=${{ github.repository_owner }}"     >> $GITHUB_ENV
          echo "REPO=${{ github.event.repository.name }}" >> $GITHUB_ENV
          echo "BASE=${{ github.event.repository.default_branch }}" >> $GITHUB_ENV

      - name: Find existing ruleset
        id: find
        run: |
          RID=$(gh api -H "$HDR" -H "$APIV" repos/$OWNER/$REPO/rulesets \
                --jq '.[] | select(.enforcement=="active")
                           | select((.conditions.ref_name.include // []) | index("~DEFAULT_BRANCH")
                                 or (.conditions.ref_name.include // []) | index("main-clean")) | .id' \
                | head -n1 || true)
          echo "rid=$RID" >> $GITHUB_OUTPUT

      - name: Upsert ruleset (default + main-clean)
        run: |
          RID="${{ steps.find.outputs.rid }}"
          cat > ruleset.json <<'JSON'
          {
            "name": "protect: default branch",
            "enforcement": "active",
            "target": "branch",
            "conditions": { "ref_name": { "include": ["~DEFAULT_BRANCH","main-clean"], "exclude": [] } },
            "bypass_actors": [
              { "actor_id": 41898282, "actor_type": "Integration", "bypass_mode": "pull_request" }
            ],
            "rules": [
              {
                "type": "required_status_checks",
                "parameters": {
                  "strict_required_status_checks": true,
                  "do_not_enforce_on_create": false,
                  "required_status_checks": [
                    {"context":"precommit"},
                    {"context":"build-and-test"}
                  ]
                }
              },
              {
                "type": "pull_request",
                "parameters": {
                  "dismiss_stale_reviews": true,
                  "require_code_owner_review": false,
                  "required_approving_review_count": 1,
                  "required_review_thread_resolution": true
                }
              },
              { "type": "required_linear_history" },
              { "type": "non_fast_forward" }
            ]
          }
          JSON
          if [ -n "$RID" ]; then
            gh api -X PUT -H "$HDR" -H "$APIV" repos/$OWNER/$REPO/rulesets/$RID --input ruleset.json
          else
            gh api -X POST -H "$HDR" -H "$APIV" repos/$OWNER/$REPO/rulesets     --input ruleset.json
          fi

      - name: Require signed commits (branch protection)
        run: |
          gh api -X POST -H "$HDR" repos/$OWNER/$REPO/branches/$BASE/protection/required_signatures || true

      - name: Lock main-legacy
        run: |
          LEG=main-legacy
          gh api -X PUT -H "$HDR" repos/$OWNER/$REPO/branches/$LEG/protection --input - <<'JSON' || true
          {
            "required_status_checks": null,
            "enforce_admins": true,
            "required_pull_request_reviews": null,
            "restrictions": null,
            "allow_force_pushes": false,
            "allow_deletions": false,
            "lock_branch": { "enabled": true }
          }
          JSON
