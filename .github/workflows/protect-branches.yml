name: Protect branches

on:
  push:
    branches: [main-clean]
  workflow_dispatch:
  schedule:
    - cron: '17 3 * * *'  # –µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∞ (UTC)

permissions:
  contents: read
  pull-requests: read
  actions: read
  administration: write

concurrency:
  group: protect-branches
  cancel-in-progress: false

jobs:
  protect:
    if: github.ref == 'refs/heads/main-clean' || github.event_name != 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Apply branch protections
        env:
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAIN: main-clean
          LEG: main-legacy
        run: |
          set -euo pipefail
          HDR='Accept: application/vnd.github+json'

          echo "üîê Apply protections for $MAIN"
          gh api -X PUT "repos/$OWNER/$REPO/branches/$MAIN/protection" -H "$HDR" --input - <<'JSON'
          {
            "required_status_checks": {
              "strict": true,
              "checks": [
                {"context":"precommit"},
                {"context":"build-and-test"}
              ]
            },
            "enforce_admins": true,
            "required_pull_request_reviews": {
              "required_approving_review_count": 1,
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": false
            },
            "restrictions": null,
            "required_linear_history": true,
            "allow_force_pushes": false,
            "allow_deletions": false,
            "required_conversation_resolution": true
          }
          JSON
          gh api -X POST "repos/$OWNER/$REPO/branches/$MAIN/protection/required_signatures" -H "$HDR" >/dev/null || true

          echo "üßä Try lock $LEG"
          gh api -X PUT "repos/$OWNER/$REPO/branches/$LEG/protection" -H "$HDR" --input - <<'JSON'
          {
            "required_status_checks": null,
            "enforce_admins": true,
            "required_pull_request_reviews": null,
            "restrictions": null,
            "required_linear_history": true,
            "allow_force_pushes": false,
            "allow_deletions": false,
            "required_conversation_resolution": true,
            "lock_branch": true
          }
          JSON
          gh api -X POST "repos/$OWNER/$REPO/branches/$LEG/protection/required_signatures" -H "$HDR" >/dev/null || true

          LOCK=$(gh api "repos/$OWNER/$REPO/branches/$LEG/protection" -H "$HDR" --jq '.lock_branch.enabled' || echo false)
          if [ "$LOCK" != "true" ]; then
            echo "‚ö†Ô∏è lock_branch –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ‚Äî fallback"
            gh api -X PUT "repos/$OWNER/$REPO/branches/$LEG/protection" -H "$HDR" --input - <<'JSON'
            {
              "required_status_checks": { "strict": true, "checks": [ {"context":"lock-branch-sentinel"} ] },
              "enforce_admins": true,
              "required_pull_request_reviews": { "required_approving_review_count": 999 },
              "restrictions": null,
              "required_linear_history": true,
              "allow_force_pushes": false,
              "allow_deletions": false,
              "required_conversation_resolution": true
            }
            JSON
            gh api -X POST "repos/$OWNER/$REPO/branches/$LEG/protection/required_signatures" -H "$HDR" >/dev/null || true
          fi

          echo "‚úÖ Branch protections updated" >> "$GITHUB_STEP_SUMMARY"
